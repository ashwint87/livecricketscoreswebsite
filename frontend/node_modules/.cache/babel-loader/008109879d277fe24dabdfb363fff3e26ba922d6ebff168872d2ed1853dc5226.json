{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/live-cricket-scores-main/frontend/src/context/NewsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsContext = /*#__PURE__*/createContext();\nexport const NewsProvider = ({\n  children,\n  query,\n  max = null\n}) => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const lastSuccessfulArticles = useRef([]);\n  const toSearchQuery = str => str.replace(/,/g, '').replace(/\\s+/g, '+').replace(/[^\\w+]/g, '');\n  const searchQuery = toSearchQuery(query || '');\n\n  // Load cached data on mount\n  useEffect(() => {\n    const cached = localStorage.getItem('cached_news');\n    if (cached) {\n      const parsed = JSON.parse(cached);\n      lastSuccessfulArticles.current = parsed;\n      setArticles(parsed); // show cached while loading\n    }\n  }, []);\n  useEffect(() => {\n    if (!searchQuery) return;\n    const fetchNews = async () => {\n      setLoading(true);\n      try {\n        var _json$articles;\n        let url = `/api/news?q=${searchQuery}`;\n        if (max !== null) url += `&max=${max}`;\n        const response = await fetch(url);\n        const json = await response.json();\n        if (((_json$articles = json.articles) === null || _json$articles === void 0 ? void 0 : _json$articles.length) > 0) {\n          setArticles(json.articles);\n          lastSuccessfulArticles.current = json.articles;\n          localStorage.setItem('cached_news', JSON.stringify(json.articles));\n        } else {\n          console.warn('API returned empty, using cached');\n          setArticles(lastSuccessfulArticles.current);\n        }\n      } catch (error) {\n        console.error('❌ News fetch failed:', error.message);\n        setArticles(lastSuccessfulArticles.current);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNews();\n  }, [searchQuery, max]);\n  return /*#__PURE__*/_jsxDEV(NewsContext.Provider, {\n    value: {\n      articles,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsProvider, \"7zFgRgNt3IeCA8cJk01rbU65sMU=\");\n_c = NewsProvider;\nexport const useNews = () => {\n  _s2();\n  return useContext(NewsContext);\n};\n_s2(useNews, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"NewsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useRef","jsxDEV","_jsxDEV","NewsContext","NewsProvider","children","query","max","_s","articles","setArticles","loading","setLoading","lastSuccessfulArticles","toSearchQuery","str","replace","searchQuery","cached","localStorage","getItem","parsed","JSON","parse","current","fetchNews","_json$articles","url","response","fetch","json","length","setItem","stringify","console","warn","error","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useNews","_s2","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/live-cricket-scores-main/frontend/src/context/NewsContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, useRef } from 'react';\n\nconst NewsContext = createContext();\n\nexport const NewsProvider = ({ children, query, max = null }) => {\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const lastSuccessfulArticles = useRef([]);\n\n  const toSearchQuery = (str) =>\n    str.replace(/,/g, '').replace(/\\s+/g, '+').replace(/[^\\w+]/g, '');\n\n  const searchQuery = toSearchQuery(query || '');\n\n  // Load cached data on mount\n  useEffect(() => {\n    const cached = localStorage.getItem('cached_news');\n    if (cached) {\n      const parsed = JSON.parse(cached);\n      lastSuccessfulArticles.current = parsed;\n      setArticles(parsed); // show cached while loading\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    const fetchNews = async () => {\n      setLoading(true);\n      try {\n        let url = `/api/news?q=${searchQuery}`;\n        if (max !== null) url += `&max=${max}`;\n\n        const response = await fetch(url);\n        const json = await response.json();\n\n        if (json.articles?.length > 0) {\n          setArticles(json.articles);\n          lastSuccessfulArticles.current = json.articles;\n          localStorage.setItem('cached_news', JSON.stringify(json.articles));\n        } else {\n          console.warn('API returned empty, using cached');\n          setArticles(lastSuccessfulArticles.current);\n        }\n      } catch (error) {\n        console.error('❌ News fetch failed:', error.message);\n        setArticles(lastSuccessfulArticles.current);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchNews();\n  }, [searchQuery, max]);\n\n  return (\n    <NewsContext.Provider value={{ articles, loading }}>\n      {children}\n    </NewsContext.Provider>\n  );\n};\n\nexport const useNews = () => useContext(NewsContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// src/context/SeriesMatchListContext.js\nimport React,{createContext,useContext,useEffect,useState}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const SeriesMatchListContext=/*#__PURE__*/createContext();export const SeriesMatchListProvider=_ref=>{let{seriesIds=[],children}=_ref;const[seriesMatches,setSeriesMatches]=useState([]);const[loadingMatches,setLoadingMatches]=useState(true);useEffect(()=>{if(!seriesIds.length)return;const fetchMatches=async()=>{setLoadingMatches(true);try{const results=await Promise.all(seriesIds.map(id=>axios.get(\"/api/series/\".concat(id,\"/matches\"))));const merged=results.flatMap(res=>{var _res$data,_res$data$data;return((_res$data=res.data)===null||_res$data===void 0?void 0:(_res$data$data=_res$data.data)===null||_res$data$data===void 0?void 0:_res$data$data.data)||[];});setSeriesMatches(merged);}catch(err){console.error('Error fetching series matches:',err);setSeriesMatches([]);}finally{setLoadingMatches(false);}};fetchMatches();},[seriesIds.join(',')]);return/*#__PURE__*/_jsx(SeriesMatchListContext.Provider,{value:{seriesMatches,loadingMatches},children:children});};export const useSeriesMatchList=()=>useContext(SeriesMatchListContext);","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","axios","jsx","_jsx","SeriesMatchListContext","SeriesMatchListProvider","_ref","seriesIds","children","seriesMatches","setSeriesMatches","loadingMatches","setLoadingMatches","length","fetchMatches","results","Promise","all","map","id","get","concat","merged","flatMap","res","_res$data","_res$data$data","data","err","console","error","join","Provider","value","useSeriesMatchList"],"sources":["/Users/ashwin.r1/Downloads/live-cricket-scores-main/frontend/src/context/SeriesMatchListContext.js"],"sourcesContent":["// src/context/SeriesMatchListContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst SeriesMatchListContext = createContext();\n\nexport const SeriesMatchListProvider = ({ seriesIds = [], children }) => {\n  const [seriesMatches, setSeriesMatches] = useState([]);\n  const [loadingMatches, setLoadingMatches] = useState(true);\n\n  useEffect(() => {\n    if (!seriesIds.length) return;\n\n    const fetchMatches = async () => {\n      setLoadingMatches(true);\n      try {\n        const results = await Promise.all(\n          seriesIds.map(id => axios.get(`/api/series/${id}/matches`))\n        );\n        const merged = results.flatMap(res => res.data?.data?.data || []);\n        setSeriesMatches(merged);\n      } catch (err) {\n        console.error('Error fetching series matches:', err);\n        setSeriesMatches([]);\n      } finally {\n        setLoadingMatches(false);\n      }\n    };\n\n    fetchMatches();\n  }, [seriesIds.join(',')]);\n\n  return (\n    <SeriesMatchListContext.Provider value={{ seriesMatches, loadingMatches }}>\n      {children}\n    </SeriesMatchListContext.Provider>\n  );\n};\n\nexport const useSeriesMatchList = () => useContext(SeriesMatchListContext);\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC7E,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,sBAAsB,cAAGP,aAAa,CAAC,CAAC,CAE9C,MAAO,MAAM,CAAAQ,uBAAuB,CAAGC,IAAA,EAAkC,IAAjC,CAAEC,SAAS,CAAG,EAAE,CAAEC,QAAS,CAAC,CAAAF,IAAA,CAClE,KAAM,CAACG,aAAa,CAAEC,gBAAgB,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACW,cAAc,CAAEC,iBAAiB,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAE1DD,SAAS,CAAC,IAAM,CACd,GAAI,CAACQ,SAAS,CAACM,MAAM,CAAE,OAEvB,KAAM,CAAAC,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/BF,iBAAiB,CAAC,IAAI,CAAC,CACvB,GAAI,CACF,KAAM,CAAAG,OAAO,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAC/BV,SAAS,CAACW,GAAG,CAACC,EAAE,EAAIlB,KAAK,CAACmB,GAAG,gBAAAC,MAAA,CAAgBF,EAAE,YAAU,CAAC,CAC5D,CAAC,CACD,KAAM,CAAAG,MAAM,CAAGP,OAAO,CAACQ,OAAO,CAACC,GAAG,OAAAC,SAAA,CAAAC,cAAA,OAAI,EAAAD,SAAA,CAAAD,GAAG,CAACG,IAAI,UAAAF,SAAA,kBAAAC,cAAA,CAARD,SAAA,CAAUE,IAAI,UAAAD,cAAA,iBAAdA,cAAA,CAAgBC,IAAI,GAAI,EAAE,GAAC,CACjEjB,gBAAgB,CAACY,MAAM,CAAC,CAC1B,CAAE,MAAOM,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAEF,GAAG,CAAC,CACpDlB,gBAAgB,CAAC,EAAE,CAAC,CACtB,CAAC,OAAS,CACRE,iBAAiB,CAAC,KAAK,CAAC,CAC1B,CACF,CAAC,CAEDE,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,CAACP,SAAS,CAACwB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAEzB,mBACE5B,IAAA,CAACC,sBAAsB,CAAC4B,QAAQ,EAACC,KAAK,CAAE,CAAExB,aAAa,CAAEE,cAAe,CAAE,CAAAH,QAAA,CACvEA,QAAQ,CACsB,CAAC,CAEtC,CAAC,CAED,MAAO,MAAM,CAAA0B,kBAAkB,CAAGA,CAAA,GAAMpC,UAAU,CAACM,sBAAsB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
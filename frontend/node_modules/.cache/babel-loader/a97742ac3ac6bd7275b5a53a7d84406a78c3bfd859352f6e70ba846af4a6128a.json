{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/live-cricket-scores-main/frontend/src/components/Series.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useSeries } from './../context/SeriesContext';\nimport { format } from 'date-fns';\nimport './css/Series.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Series() {\n  _s();\n  const {\n    allSeries,\n    loading\n  } = useSeries();\n  const [search, setSearch] = useState('');\n  const uniqueSeriesMap = new Map();\n  allSeries.forEach(s => {\n    const baseKey = `${s.league_id}_${s.season_id}_${s.code}_${s.league}_${s.season}`;\n    const key = `${baseKey}_${s.start_date}_${s.end_date}`;\n\n    // Check if another entry with same baseKey exists whose stage_id is +1 or -1 of current\n    const existingEntry = Array.from(uniqueSeriesMap.entries()).find(([k, val]) => {\n      const [ek] = k.split(`_${val.start_date}_${val.end_date}`);\n      const isSameBase = ek === baseKey;\n      const stageMatch = Array.isArray(val.id) && Array.isArray(s.id) ? val.id.some(id1 => s.id.some(id2 => Math.abs(id1 - id2) === 1)) : Math.abs((Array.isArray(val.id) ? val.id[0] : val.id) - (Array.isArray(s.id) ? s.id[0] : s.id)) === 1;\n      return isSameBase && stageMatch;\n    });\n    if (!existingEntry) {\n      uniqueSeriesMap.set(key, s);\n    }\n  });\n  const uniqueSeries = Array.from(uniqueSeriesMap.values());\n  const filtered = uniqueSeries.filter(s => {\n    var _s$name, _s$league;\n    return ((_s$name = s.name) === null || _s$name === void 0 ? void 0 : _s$name.toLowerCase().includes(search.toLowerCase())) || ((_s$league = s.league) === null || _s$league === void 0 ? void 0 : _s$league.toLowerCase().includes(search.toLowerCase()));\n  });\n  function seriesName(series) {\n    const overrideLeagues = ['ICC World Test Championship', 'One Day International', 'Twenty20 International'];\n    const validTypes = ['T20', 'T10', 'ODI', 'T20I', '4day', 'Test', 'Test/5day', 'List A'];\n    const showType = validTypes.includes(series.series_type) ? ` (${series.series_type})` : '';\n    const nameOnlyKeywords = ['Regular', 'Play Offs', 'County', 'Group'];\n    const name = nameOnlyKeywords.includes(series.name) ? `${series.league}${showType}` : `${series.league}`;\n    const baseName = overrideLeagues.includes(series.league) ? `${series.name}${showType}` : name;\n    return `${baseName} ${series.season}`;\n  }\n  const formatDate = dateStr => {\n    if (!dateStr) return '';\n    const d = new Date(dateStr);\n    return format(d, 'dd MMM yyyy');\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"series-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Series\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search series...\",\n      value: search,\n      onChange: e => setSearch(e.target.value),\n      className: \"series-search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"series-grid\",\n      children: filtered.map(series => {\n        let adjustedEndDate = new Date(series.end_date);\n        if (series.code === 'TEST' || series.code === 'TEST/5DAY') {\n          adjustedEndDate.setDate(adjustedEndDate.getDate() + 4);\n        } else if (series.code === '4DAY') {\n          adjustedEndDate.setDate(adjustedEndDate.getDate() + 3);\n        }\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/series/${series.id}/${series.season_id}`,\n          state: {\n            seriesLabel: seriesName(series),\n            seriesCode: series.code,\n            stageIds: series.stage_ids\n          },\n          className: \"series-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"series-info\",\n            children: [(series === null || series === void 0 ? void 0 : series.series_type) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"series-type-tag\",\n              children: series.series_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: seriesName(series)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, series.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Series, \"JkNflETNWaN5TK6pLBI2omDxIiI=\", false, function () {\n  return [useSeries];\n});\n_c = Series;\nvar _c;\n$RefreshReg$(_c, \"Series\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","useSeries","format","jsxDEV","_jsxDEV","Series","_s","allSeries","loading","search","setSearch","uniqueSeriesMap","Map","forEach","s","baseKey","league_id","season_id","code","league","season","key","start_date","end_date","existingEntry","Array","from","entries","find","k","val","ek","split","isSameBase","stageMatch","isArray","id","some","id1","id2","Math","abs","set","uniqueSeries","values","filtered","filter","_s$name","_s$league","name","toLowerCase","includes","seriesName","series","overrideLeagues","validTypes","showType","series_type","nameOnlyKeywords","baseName","formatDate","dateStr","d","Date","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","map","adjustedEndDate","setDate","getDate","to","state","seriesLabel","seriesCode","stageIds","stage_ids","_c","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/live-cricket-scores-main/frontend/src/components/Series.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useSeries } from './../context/SeriesContext';\nimport { format } from 'date-fns';\nimport './css/Series.css';\n\nexport default function Series() {\n  const { allSeries, loading } = useSeries();\n  const [search, setSearch] = useState('');\n\n  const uniqueSeriesMap = new Map();\n\n  allSeries.forEach((s) => {\n    const baseKey = `${s.league_id}_${s.season_id}_${s.code}_${s.league}_${s.season}`;\n    const key = `${baseKey}_${s.start_date}_${s.end_date}`;\n\n    // Check if another entry with same baseKey exists whose stage_id is +1 or -1 of current\n    const existingEntry = Array.from(uniqueSeriesMap.entries()).find(([k, val]) => {\n      const [ek] = k.split(`_${val.start_date}_${val.end_date}`);\n      const isSameBase = ek === baseKey;\n      const stageMatch = Array.isArray(val.id) && Array.isArray(s.id)\n        ? val.id.some((id1) => s.id.some((id2) => Math.abs(id1 - id2) === 1))\n        : Math.abs((Array.isArray(val.id) ? val.id[0] : val.id) - (Array.isArray(s.id) ? s.id[0] : s.id)) === 1;\n\n      return isSameBase && stageMatch;\n    });\n\n    if (!existingEntry) {\n      uniqueSeriesMap.set(key, s);\n    }\n  });\n\n  const uniqueSeries = Array.from(uniqueSeriesMap.values());\n\n  const filtered = uniqueSeries.filter((s) =>\n    s.name?.toLowerCase().includes(search.toLowerCase()) || s.league?.toLowerCase().includes(search.toLowerCase())\n  );\n\n  function seriesName(series) {\n    const overrideLeagues = ['ICC World Test Championship', 'One Day International', 'Twenty20 International'];\n    const validTypes = ['T20', 'T10', 'ODI', 'T20I', '4day', 'Test', 'Test/5day', 'List A'];\n    const showType = validTypes.includes(series.series_type) ? ` (${series.series_type})` : '';\n\n    const nameOnlyKeywords = ['Regular', 'Play Offs', 'County', 'Group'];\n    const name = nameOnlyKeywords.includes(series.name)\n        ? `${series.league}${showType}`\n        : `${series.league}`\n\n    const baseName = overrideLeagues.includes(series.league)\n      ? `${series.name}${showType}`\n      : name\n    return `${baseName} ${series.season}`;\n  }\n\n  const formatDate = (dateStr) => {\n    if (!dateStr) return '';\n    const d = new Date(dateStr);\n    return format(d, 'dd MMM yyyy');\n  };\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <div className=\"series-container\">\n      <h1>All Series</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search series...\"\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n        className=\"series-search\"\n      />\n\n      <div className=\"series-grid\">\n        {filtered.map(series => {\n          let adjustedEndDate = new Date(series.end_date);\n          if (series.code === 'TEST' || series.code === 'TEST/5DAY') {\n            adjustedEndDate.setDate(adjustedEndDate.getDate() + 4);\n          } else if (series.code === '4DAY') {\n            adjustedEndDate.setDate(adjustedEndDate.getDate() + 3);\n          }\n\n          return (\n            <Link\n              key={series.id}\n              to={`/series/${series.id}/${series.season_id}`}\n              state={{\n                seriesLabel: seriesName(series),\n                seriesCode: series.code,\n                stageIds: series.stage_ids\n              }}\n              className=\"series-card\"\n            >\n              <div className=\"series-info\">\n                {series?.series_type && (\n                  <span className=\"series-type-tag\">{series.series_type}</span>\n                )}\n                <h4>{seriesName(series)}</h4>\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
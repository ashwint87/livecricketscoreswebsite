{"ast":null,"code":"// normalize UI -> API values\nexport const apiGender = uiGender => (uiGender || 'mens').toLowerCase() === 'womens' ? 'women' : 'men';\nconst apiType = t => {\n  if (!t) return 'T20I';\n  const up = String(t).toUpperCase();\n  // accept slightly off inputs like 't20'\n  if (up === 'T20') return 'T20I';\n  return up; // 'T20I' | 'ODI' | 'TEST'\n};\nexport function getTeamBlock(rankings, type, uiGender = 'mens') {\n  if (!Array.isArray(rankings)) return undefined;\n  const g = apiGender(uiGender); // 'men' | 'women'\n  const ty = apiType(type); // normalized type\n  return rankings.find(r => (r === null || r === void 0 ? void 0 : r.type) === ty && ((r === null || r === void 0 ? void 0 : r.gender) || 'men') === g);\n}\nexport function getTeamsSorted(rankings, type, uiGender = 'mens') {\n  const block = getTeamBlock(rankings, type, uiGender);\n  const teams = Array.isArray(block === null || block === void 0 ? void 0 : block.team) ? block.team : [];\n  return teams.filter(t => (t === null || t === void 0 ? void 0 : t.ranking) && t.ranking.position != null).sort((a, b) => {\n    var _a$ranking$points, _b$ranking$points;\n    // numeric position, then points desc as tie‑breaker\n    const pa = Number(a.ranking.position);\n    const pb = Number(b.ranking.position);\n    if (pa !== pb) return pa - pb;\n    const ptsA = Number((_a$ranking$points = a.ranking.points) !== null && _a$ranking$points !== void 0 ? _a$ranking$points : 0);\n    const ptsB = Number((_b$ranking$points = b.ranking.points) !== null && _b$ranking$points !== void 0 ? _b$ranking$points : 0);\n    return ptsB - ptsA;\n  });\n}\nexport function hasFormatForGender(rankings, type, uiGender = 'mens') {\n  const block = getTeamBlock(rankings, type, uiGender);\n  // true only if there is at least one team with a ranking object\n  return !!(Array.isArray(block === null || block === void 0 ? void 0 : block.team) && block.team.some(t => t === null || t === void 0 ? void 0 : t.ranking));\n}\n\n// optional convenience\nexport function getTeamsTop(rankings, type, uiGender = 'mens', limit = 5) {\n  const rows = getTeamsSorted(rankings, type, uiGender);\n  return rows.slice(0, Math.max(0, limit));\n}","map":{"version":3,"names":["apiGender","uiGender","toLowerCase","apiType","t","up","String","toUpperCase","getTeamBlock","rankings","type","Array","isArray","undefined","g","ty","find","r","gender","getTeamsSorted","block","teams","team","filter","ranking","position","sort","a","b","_a$ranking$points","_b$ranking$points","pa","Number","pb","ptsA","points","ptsB","hasFormatForGender","some","getTeamsTop","limit","rows","slice","Math","max"],"sources":["/Users/ashwin.r1/Downloads/live-cricket-scores-main/frontend/src/utils/rankings.js"],"sourcesContent":["// normalize UI -> API values\nexport const apiGender = (uiGender) =>\n  (uiGender || 'mens').toLowerCase() === 'womens' ? 'women' : 'men';\n\nconst apiType = (t) => {\n  if (!t) return 'T20I';\n  const up = String(t).toUpperCase();\n  // accept slightly off inputs like 't20'\n  if (up === 'T20') return 'T20I';\n  return up; // 'T20I' | 'ODI' | 'TEST'\n};\n\nexport function getTeamBlock(rankings, type, uiGender = 'mens') {\n  if (!Array.isArray(rankings)) return undefined;\n  const g = apiGender(uiGender);                 // 'men' | 'women'\n  const ty = apiType(type);                      // normalized type\n  return rankings.find(r => r?.type === ty && (r?.gender || 'men') === g);\n}\n\nexport function getTeamsSorted(rankings, type, uiGender = 'mens') {\n  const block = getTeamBlock(rankings, type, uiGender);\n  const teams = Array.isArray(block?.team) ? block.team : [];\n  return teams\n    .filter(t => t?.ranking && t.ranking.position != null)\n    .sort((a, b) => {\n      // numeric position, then points desc as tie‑breaker\n      const pa = Number(a.ranking.position);\n      const pb = Number(b.ranking.position);\n      if (pa !== pb) return pa - pb;\n      const ptsA = Number(a.ranking.points ?? 0);\n      const ptsB = Number(b.ranking.points ?? 0);\n      return ptsB - ptsA;\n    });\n}\n\nexport function hasFormatForGender(rankings, type, uiGender = 'mens') {\n  const block = getTeamBlock(rankings, type, uiGender);\n  // true only if there is at least one team with a ranking object\n  return !!(Array.isArray(block?.team) && block.team.some(t => t?.ranking));\n}\n\n// optional convenience\nexport function getTeamsTop(rankings, type, uiGender = 'mens', limit = 5) {\n  const rows = getTeamsSorted(rankings, type, uiGender);\n  return rows.slice(0, Math.max(0, limit));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
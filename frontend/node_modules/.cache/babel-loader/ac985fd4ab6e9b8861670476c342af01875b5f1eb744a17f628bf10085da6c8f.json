{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/live-cricket-scores-main/frontend/src/components/YouTubeVideoList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction YouTubeVideoList({\n  matchQuery\n}) {\n  _s();\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const res = await fetch(`/api/videos?q=${encodeURIComponent(matchQuery)}`);\n        const data = await res.json();\n        setVideos(data);\n      } catch (err) {\n        console.error(\"Error fetching videos:\", err);\n      }\n    };\n    fetchVideos();\n  }, [matchQuery]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Highlights: \", matchQuery.replaceAll(\"+\", \" \")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: \"20px\"\n      },\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"480px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"100%\",\n          height: \"270\",\n          src: `https://www.youtube.com/embed/${video.id.videoId}`,\n          title: video.snippet.title,\n          allowFullScreen: true,\n          frameBorder: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: video.snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: video.snippet.channelTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, video.id.videoId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(YouTubeVideoList, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n_c = YouTubeVideoList;\nexport default YouTubeVideoList;\nvar _c;\n$RefreshReg$(_c, \"YouTubeVideoList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","YouTubeVideoList","matchQuery","_s","videos","setVideos","fetchVideos","res","fetch","encodeURIComponent","data","json","err","console","error","children","replaceAll","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","gap","map","video","width","height","src","id","videoId","title","snippet","allowFullScreen","frameBorder","channelTitle","_c","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/live-cricket-scores-main/frontend/src/components/YouTubeVideoList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction YouTubeVideoList({ matchQuery }) {\n  const [videos, setVideos] = useState([]);\n\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const res = await fetch(`/api/videos?q=${encodeURIComponent(matchQuery)}`);\n        const data = await res.json();\n        setVideos(data);\n      } catch (err) {\n        console.error(\"Error fetching videos:\", err);\n      }\n    };\n\n    fetchVideos();\n  }, [matchQuery]);\n\n  return (\n    <div>\n      <h2>Highlights: {matchQuery.replaceAll(\"+\", \" \")}</h2>\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"20px\" }}>\n        {videos.map((video) => (\n          <div key={video.id.videoId} style={{ width: \"480px\" }}>\n            <iframe\n              width=\"100%\"\n              height=\"270\"\n              src={`https://www.youtube.com/embed/${video.id.videoId}`}\n              title={video.snippet.title}\n              allowFullScreen\n              frameBorder=\"0\"\n            ></iframe>\n            <h4>{video.snippet.title}</h4>\n            <p>{video.snippet.channelTitle}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default YouTubeVideoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,gBAAgBA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iBAAiBC,kBAAkB,CAACP,UAAU,CAAC,EAAE,CAAC;QAC1E,MAAMQ,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7BN,SAAS,CAACK,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAC9C;IACF,CAAC;IAEDN,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAEhB,oBACEF,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,GAAI,cAAY,EAACb,UAAU,CAACc,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtDpB,OAAA;MAAKqB,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAE;MAAAT,QAAA,EAC5DX,MAAM,CAACqB,GAAG,CAAEC,KAAK,iBAChB1B,OAAA;QAA4BqB,KAAK,EAAE;UAAEM,KAAK,EAAE;QAAQ,CAAE;QAAAZ,QAAA,gBACpDf,OAAA;UACE2B,KAAK,EAAC,MAAM;UACZC,MAAM,EAAC,KAAK;UACZC,GAAG,EAAE,iCAAiCH,KAAK,CAACI,EAAE,CAACC,OAAO,EAAG;UACzDC,KAAK,EAAEN,KAAK,CAACO,OAAO,CAACD,KAAM;UAC3BE,eAAe;UACfC,WAAW,EAAC;QAAG;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eACVpB,OAAA;UAAAe,QAAA,EAAKW,KAAK,CAACO,OAAO,CAACD;QAAK;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9BpB,OAAA;UAAAe,QAAA,EAAIW,KAAK,CAACO,OAAO,CAACG;QAAY;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAV3BM,KAAK,CAACI,EAAE,CAACC,OAAO;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWrB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CAtCQF,gBAAgB;AAAAoC,EAAA,GAAhBpC,gBAAgB;AAwCzB,eAAeA,gBAAgB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
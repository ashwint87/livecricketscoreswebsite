{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const FallbackImageContext=/*#__PURE__*/createContext();export const FallbackImageProvider=_ref=>{let{children}=_ref;const[images,setImages]=useState({});useEffect(()=>{const fetchFallbackImages=async()=>{try{const res=await fetch('/api/default-images');const text=await res.text();const extract=key=>{const match=text.match(new RegExp(\"\".concat(key,\":\\\\s*['\\\"]([^'\\\"]+)['\\\"]\")));return match?match[1]:null;};const result={stadium:extract('stadium_url'),series:extract('series_url'),flag:extract('flag_url')};setImages(result);}catch(err){console.error('❌ Failed to fetch fallback images:',err);}};fetchFallbackImages();},[]);return/*#__PURE__*/_jsx(FallbackImageContext.Provider,{value:{images},children:children});};export const useFallbackImages=()=>useContext(FallbackImageContext);","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsx","_jsx","FallbackImageContext","FallbackImageProvider","_ref","children","images","setImages","fetchFallbackImages","res","fetch","text","extract","key","match","RegExp","concat","result","stadium","series","flag","err","console","error","Provider","value","useFallbackImages"],"sources":["/Users/ashwin.r1/Downloads/live-cricket-scores-main/frontend/src/context/FallbackImageContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst FallbackImageContext = createContext();\n\nexport const FallbackImageProvider = ({ children }) => {\n  const [images, setImages] = useState({});\n\n  useEffect(() => {\n    const fetchFallbackImages = async () => {\n      try {\n        const res = await fetch('/api/default-images');\n        const text = await res.text();\n\n        const extract = (key) => {\n          const match = text.match(new RegExp(`${key}:\\\\s*['\"]([^'\"]+)['\"]`));\n          return match ? match[1] : null;\n        };\n\n        const result = {\n          stadium: extract('stadium_url'),\n          series: extract('series_url'),\n          flag: extract('flag_url'),\n        };\n\n        setImages(result);\n      } catch (err) {\n        console.error('❌ Failed to fetch fallback images:', err);\n      }\n    };\n\n    fetchFallbackImages();\n  }, []);\n\n  return (\n    <FallbackImageContext.Provider value={{ images }}>\n      {children}\n    </FallbackImageContext.Provider>\n  );\n};\n\nexport const useFallbackImages = () => useContext(FallbackImageContext);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,oBAAoB,cAAGN,aAAa,CAAC,CAAC,CAE5C,MAAO,MAAM,CAAAO,qBAAqB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChD,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAExCD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,qBAAqB,CAAC,CAC9C,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,GAAG,CAACE,IAAI,CAAC,CAAC,CAE7B,KAAM,CAAAC,OAAO,CAAIC,GAAG,EAAK,CACvB,KAAM,CAAAC,KAAK,CAAGH,IAAI,CAACG,KAAK,CAAC,GAAI,CAAAC,MAAM,IAAAC,MAAA,CAAIH,GAAG,4BAAuB,CAAC,CAAC,CACnE,MAAO,CAAAC,KAAK,CAAGA,KAAK,CAAC,CAAC,CAAC,CAAG,IAAI,CAChC,CAAC,CAED,KAAM,CAAAG,MAAM,CAAG,CACbC,OAAO,CAAEN,OAAO,CAAC,aAAa,CAAC,CAC/BO,MAAM,CAAEP,OAAO,CAAC,YAAY,CAAC,CAC7BQ,IAAI,CAAER,OAAO,CAAC,UAAU,CAC1B,CAAC,CAEDL,SAAS,CAACU,MAAM,CAAC,CACnB,CAAE,MAAOI,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,oCAAoC,CAAEF,GAAG,CAAC,CAC1D,CACF,CAAC,CAEDb,mBAAmB,CAAC,CAAC,CACvB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEP,IAAA,CAACC,oBAAoB,CAACsB,QAAQ,EAACC,KAAK,CAAE,CAAEnB,MAAO,CAAE,CAAAD,QAAA,CAC9CA,QAAQ,CACoB,CAAC,CAEpC,CAAC,CAED,MAAO,MAAM,CAAAqB,iBAAiB,CAAGA,CAAA,GAAM7B,UAAU,CAACK,oBAAoB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
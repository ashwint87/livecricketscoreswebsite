{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const TeamsContext=/*#__PURE__*/createContext();export const TeamsProvider=_ref=>{let{children}=_ref;const[teams,setTeams]=useState([]);const[filteredTeams,setFilteredTeams]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchTeams=async()=>{try{var _json$data;const res=await fetch('/api/teams');const json=await res.json();setTeams(((_json$data=json.data)===null||_json$data===void 0?void 0:_json$data.data)||[]);setFilteredTeams(json.data.data.filter(team=>team.national_team===true));}catch(err){console.error('Error fetching teams:',err);}finally{setLoading(false);}};fetchTeams();},[]);return/*#__PURE__*/_jsx(TeamsContext.Provider,{value:{teams,filteredTeams,loading},children:children});};export const useTeams=()=>useContext(TeamsContext);","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsx","_jsx","TeamsContext","TeamsProvider","_ref","children","teams","setTeams","filteredTeams","setFilteredTeams","loading","setLoading","fetchTeams","_json$data","res","fetch","json","data","filter","team","national_team","err","console","error","Provider","value","useTeams"],"sources":["/Users/ashwin.r1/Downloads/live-cricket-scores-main/frontend/src/context/TeamsContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst TeamsContext = createContext();\n\nexport const TeamsProvider = ({ children }) => {\n  const [teams, setTeams] = useState([]);\n  const [filteredTeams, setFilteredTeams] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchTeams = async () => {\n      try {\n        const res = await fetch('/api/teams');\n        const json = await res.json();\n        setTeams(json.data?.data || []);\n        setFilteredTeams(json.data.data.filter(team => team.national_team === true));\n      } catch (err) {\n        console.error('Error fetching teams:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTeams();\n  }, []);\n\n  return (\n    <TeamsContext.Provider value={{ teams, filteredTeams, loading }}>\n      {children}\n    </TeamsContext.Provider>\n  );\n};\n\nexport const useTeams = () => useContext(TeamsContext);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAAC,CAAC,CAEpC,MAAO,MAAM,CAAAO,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACS,aAAa,CAAEC,gBAAgB,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAE5CD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAc,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,KAAAC,UAAA,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,YAAY,CAAC,CACrC,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,GAAG,CAACE,IAAI,CAAC,CAAC,CAC7BT,QAAQ,CAAC,EAAAM,UAAA,CAAAG,IAAI,CAACC,IAAI,UAAAJ,UAAA,iBAATA,UAAA,CAAWI,IAAI,GAAI,EAAE,CAAC,CAC/BR,gBAAgB,CAACO,IAAI,CAACC,IAAI,CAACA,IAAI,CAACC,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACC,aAAa,GAAK,IAAI,CAAC,CAAC,CAC9E,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAEF,GAAG,CAAC,CAC7C,CAAC,OAAS,CACRV,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CACDC,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEX,IAAA,CAACC,YAAY,CAACsB,QAAQ,EAACC,KAAK,CAAE,CAAEnB,KAAK,CAAEE,aAAa,CAAEE,OAAQ,CAAE,CAAAL,QAAA,CAC7DA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAED,MAAO,MAAM,CAAAqB,QAAQ,CAAGA,CAAA,GAAM7B,UAAU,CAACK,YAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
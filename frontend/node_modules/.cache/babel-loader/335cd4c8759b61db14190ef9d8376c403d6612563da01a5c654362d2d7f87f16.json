{"ast":null,"code":"var _jsxFileName = \"/Users/ashwin.r1/Downloads/live-cricket-scores-main/frontend/src/context/RankingsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// RankingsContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RankingsContext = /*#__PURE__*/createContext();\nexport const RankingsProvider = ({\n  children\n}) => {\n  _s();\n  const [rankings, setRankings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchRankings = async () => {\n      try {\n        const res = await fetch('/api/team-rankings');\n        const data = await res.json();\n        setRankings((data === null || data === void 0 ? void 0 : data.data) || []);\n      } catch (err) {\n        console.error('Error fetching rankings:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRankings();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(RankingsContext.Provider, {\n    value: {\n      rankings,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(RankingsProvider, \"5cpUAF/ddFtVy/nlDoorgGo89/E=\");\n_c = RankingsProvider;\nexport const useRankings = () => {\n  _s2();\n  return useContext(RankingsContext);\n};\n_s2(useRankings, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"RankingsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","RankingsContext","RankingsProvider","children","_s","rankings","setRankings","loading","setLoading","fetchRankings","res","fetch","data","json","err","console","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useRankings","_s2","$RefreshReg$"],"sources":["/Users/ashwin.r1/Downloads/live-cricket-scores-main/frontend/src/context/RankingsContext.js"],"sourcesContent":["// RankingsContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst RankingsContext = createContext();\n\nexport const RankingsProvider = ({ children }) => {\n  const [rankings, setRankings] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchRankings = async () => {\n      try {\n        const res = await fetch('/api/team-rankings');\n        const data = await res.json();\n        setRankings(data?.data || []);\n      } catch (err) {\n        console.error('Error fetching rankings:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRankings();\n  }, []);\n\n  return (\n    <RankingsContext.Provider value={{ rankings, loading }}>\n      {children}\n    </RankingsContext.Provider>\n  );\n};\n\nexport const useRankings = () => useContext(RankingsContext);\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMO,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oBAAoB,CAAC;QAC7C,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7BP,WAAW,CAAC,CAAAM,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEA,IAAI,KAAI,EAAE,CAAC;MAC/B,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;MAChD,CAAC,SAAS;QACRN,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA,CAACC,eAAe,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,QAAQ;MAAEE;IAAQ,CAAE;IAAAJ,QAAA,EACpDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAAClB,EAAA,CAxBWF,gBAAgB;AAAAqB,EAAA,GAAhBrB,gBAAgB;AA0B7B,OAAO,MAAMsB,WAAW,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM7B,UAAU,CAACK,eAAe,CAAC;AAAA;AAACwB,GAAA,CAAhDD,WAAW;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}